import React from 'react';
interface ReactSelectionPopupProps {
    /**
     * This function is called when a user selects texts in html.
     * @param text - The text of the selection
     * @param meta - Additional metadata associated with the selected text (optional)
     */
    onSelect?: (text: string, meta?: any) => void;
    /**
     * This function is called when a popup is closed due to focus lost.
     */
    onClose?: () => void;
    /**
     * This function returns a function to close a popup.
     */
    children: React.ReactNode;
    /**
     * The className to be used to identify selectable element(s).
     */
    selectionClassName: string;
    /**
     * Whether multiple elements can be selected at once (default is false).
     */
    multipleSelection?: boolean;
    /**
     * The name of the metadata attribute associated with the selected text (optional).
     * The metadata value should be JSON stringfied.
     * @example <div ... className="selection" metaAttrName="data-meta">...</div>
     * ...
     * <ReactSelectionPopup ... data-meta={JSON.stringfy(data)}>...</ReactSelectionPopup>
     */
    metaAttrName?: string;
    /**
     * The offset (in pixels) to the left direction of the screen to reposition the popup. The default pivot x is right of the pop.
     */
    offsetToLeft?: number;
    /**
     * The offset (in pixels) to the top direction of the screen to reposition the popup. The default pivot y is bottom of the pop.
     */
    offsetToTop?: number;
    id?: string;
    className?: string;
    style?: React.CSSProperties;
}
export interface HandleRef {
    close: () => void;
}
declare const _default: React.ForwardRefExoticComponent<ReactSelectionPopupProps & React.RefAttributes<HandleRef>>;
export default _default;
